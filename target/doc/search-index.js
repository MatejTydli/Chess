var searchIndex = JSON.parse('{\
"simple_chess":{"doc":"This is rust chess library focused on simplicity. Speed is …","t":[13,18,18,18,18,18,18,18,18,13,18,18,18,18,18,18,18,18,13,13,13,3,13,13,18,18,18,18,18,18,18,18,3,4,13,18,18,18,18,18,18,18,18,13,18,18,18,18,18,18,18,18,13,13,18,18,18,18,18,18,18,18,13,4,13,13,13,18,18,18,18,18,18,18,18,4,13,18,18,18,18,18,18,18,18,13,13,13,3,4,13,4,13,13,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["A","A1","A2","A3","A4","A5","A6","A7","A8","B","B1","B2","B3","B4","B5","B6","B7","B8","Bishop","Black","Black","Board","Both","C","C1","C2","C3","C4","C5","C6","C7","C8","ChessMove","Color","D","D1","D2","D3","D4","D5","D6","D7","D8","E","E1","E2","E3","E4","E5","E6","E7","E8","Eighth","F","F1","F2","F3","F4","F5","F6","F7","F8","Fifth","File","First","Fourth","G","G1","G2","G3","G4","G5","G6","G7","G8","GenMask","H","H1","H2","H3","H4","H5","H6","H7","H8","King","Knight","Pawn","Piece","PieceType","Queen","Rank","Rook","Second","Seventh","Sixth","Square","Third","White","White","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","deafult","down","down_left","down_right","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","gen_moves","get","get_rank","into","into","into","into","into","into","into","into","into","is_valid","is_valid","iter","left","new","new","piece_type","place_piece","remove_piece","right","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","up","up_left","up_right"],"q":["simple_chessd":["","built in constant A1 Square for easy indexing to Board","built in constant A2 Square for easy indexing to Board","built in constant A3 Square for easy indexing to Board","built in constant A4 Square for easy indexing to Board","built in constant A5 Square for easy indexing to Board","built in constant A6 Square for easy indexing to Board","built in constant A7 Square for easy indexing to Board","built in constant A8 Square for easy indexing to Board","","built in constant B1 Square for easy indexing to Board","built in constant B2 Square for easy indexing to Board","built in constant B3 Square for easy indexing to Board","built in constant B4 Square for easy indexing to Board","built in constant B5 Square for easy indexing to Board","built in constant B6 Square for easy indexing to Board","built in constant B7 Square for easy indexing to Board","built in constant B8 Square for easy indexing to Board","","","","Board stores position and history of position. Position is …","","","built in constant C1 Square for easy indexing to Board","built in constant C2 Square for easy indexing to Board","built in constant C3 Square for easy indexing to Board","built in constant C4 Square for easy indexing to Board","built in constant C5 Square for easy indexing to Board","built in constant C6 Square for easy indexing to Board","built in constant C7 Square for easy indexing to Board","built in constant C8 Square for easy indexing to Board","Represent a chess move, stores info about move (start, …","","","built in constant D1 Square for easy indexing to Board","built in constant D2 Square for easy indexing to Board","built in constant D3 Square for easy indexing to Board","built in constant D4 Square for easy indexing to Board","built in constant D5 Square for easy indexing to Board","built in constant D6 Square for easy indexing to Board","built in constant D7 Square for easy indexing to Board","built in constant D8 Square for easy indexing to Board","","built in constant E1 Square for easy indexing to Board","built in constant E2 Square for easy indexing to Board","built in constant E3 Square for easy indexing to Board","built in constant E4 Square for easy indexing to Board","built in constant E5 Square for easy indexing to Board","built in constant E6 Square for easy indexing to Board","built in constant E7 Square for easy indexing to Board","built in constant E8 Square for easy indexing to Board","","","built in constant F1 Square for easy indexing to Board","built in constant F2 Square for easy indexing to Board","built in constant F3 Square for easy indexing to Board","built in constant F4 Square for easy indexing to Board","built in constant F5 Square for easy indexing to Board","built in constant F6 Square for easy indexing to Board","built in constant F7 Square for easy indexing to Board","built in constant F8 Square for easy indexing to Board","","File enum for simple orientation on the board","","","","built in constant G1 Square for easy indexing to Board","built in constant G2 Square for easy indexing to Board","built in constant G3 Square for easy indexing to Board","built in constant G4 Square for easy indexing to Board","built in constant G5 Square for easy indexing to Board","built in constant G6 Square for easy indexing to Board","built in constant G7 Square for easy indexing to Board","built in constant G8 Square for easy indexing to Board","Masks represents differnet types of generating moves via …","","built in constant H1 Square for easy indexing to Board","built in constant H2 Square for easy indexing to Board","built in constant H3 Square for easy indexing to Board","built in constant H4 Square for easy indexing to Board","built in constant H5 Square for easy indexing to Board","built in constant H6 Square for easy indexing to Board","built in constant H7 Square for easy indexing to Board","built in constant H8 Square for easy indexing to Board","","","","Represent a piece with type and color. Doesn’t hold any …","represent type of piece","","rank enum for simple orientation on the board","","","","","Represent a index on the Board.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","setup Board position to deaufult chess position","Create ChessMove from Square to n squares down.","Create ChessMove from Square to n squares left and down.","Create ChessMove from Square to n squares right and down.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create valid moves from Board, depends on GenMask.","get reference to specific <code>Option&lt;Piece&gt;</code> on the Board","get reference to specific rank on the Board","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Iterate over whole Board with reference.","Create ChessMove from Square to n squares left.","Create new Piece.","Create new ChessMove.","","Place(or replace) piece on board","Remove piece on board","Create ChessMove from Square to n squares right.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create ChessMove from Square to n squares up.","Create ChessMove from Square to n squares left and up.","Create ChessMove from Square to n squares right and up."],"i":[3,9,9,9,9,9,9,9,9,3,9,9,9,9,9,9,9,9,5,1,7,0,7,3,9,9,9,9,9,9,9,9,0,0,3,9,9,9,9,9,9,9,9,3,9,9,9,9,9,9,9,9,4,3,9,9,9,9,9,9,9,9,4,0,4,4,3,9,9,9,9,9,9,9,9,0,3,9,9,9,9,9,9,9,9,5,5,5,0,0,5,0,5,4,4,4,0,4,1,7,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,6,2,9,9,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,8,9,1,2,3,4,5,6,7,8,9,0,2,2,1,2,3,4,5,6,7,8,9,2,8,2,9,6,8,6,2,2,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,9,9,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[9,10,[11,[5]]],[[13,[8,12]]]],[[9,10,[11,[5]]],[[13,[8,12]]]],[[9,10,[11,[5]]],[[13,[8,12]]]],[[1,1],14],[[2,2],14],[[3,3],14],[[4,4],14],[[5,5],14],[[6,6],14],[[7,7],14],[[8,8],14],[[9,9],14],[[1,15],16],[[2,15],16],[[3,15],16],[[4,15],16],[[5,15],16],[[6,15],16],[[8,15],16],[[9,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,7],[[17,[8]]]],[[2,9],11],[[2,4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,14],[[8,2],14],[2,[[18,[11]]]],[[9,10,[11,[5]]],[[13,[8,12]]]],[[5,1],6],[[9,9,[11,[5]]],8],0,[[2,9,[11,[6]]],2],[[2,9],2],[[9,10,[11,[5]]],[[13,[8,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[9,10,[11,[5]]],[[13,[8,12]]]],[[9,10,[11,[5]]],[[13,[8,12]]]],[[9,10,[11,[5]]],[[13,[8,12]]]]],"p":[[4,"Color"],[3,"Board"],[4,"File"],[4,"Rank"],[4,"PieceType"],[3,"Piece"],[4,"GenMask"],[3,"ChessMove"],[3,"Square"],[15,"i32"],[4,"Option"],[15,"str"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Vec"],[3,"IntoIter"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
